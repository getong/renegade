name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - testnet
      - demo

jobs:
  docker:
    runs-on: buildjet-32vcpu-ubuntu-2204-arm
    permissions:
      id-token: write
      contents: read
    steps:
      # Setup source files, environment variables, buildx, and cache
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract Branch Name
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker Layers
        uses: buildjet/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Allow push access to Docker Hub and AWS ECR
      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE }}
          aws-region: ${{ secrets.AWS_ECR_REGION }}
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      # Build and push both debug and release
      - name: Build and Push - Debug
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/debug/Dockerfile
          platforms: linux/arm64
          tags: |
            renegadefi/renegade:${{ env.BRANCH_NAME }}-latest-debug
            ${{ secrets.AWS_ECR_REPOSITORY }}/renegade:${{ env.BRANCH_NAME }}-latest-debug
          push: true
          cache-from: type=registry,ref=user/app:latest
          cache-to: type=inline
      - name: Build and Push - Release
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/release/Dockerfile
          platforms: linux/arm64
          tags: |
            renegadefi/renegade:${{ env.BRANCH_NAME }}-latest
            ${{ secrets.AWS_ECR_REPOSITORY }}/renegade:${{ env.BRANCH_NAME }}-latest
          push: true
          cache-from: type=registry,ref=user/app:latest
          cache-to: type=inline
